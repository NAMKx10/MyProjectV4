<?php

namespace App\Controllers;

use App\Models\UserModel;
use App\Models\RoleModel;

class Users extends BaseController
{
    /**
     * يعرض الصفحة الرئيسية لإدارة المستخدمين.
     */
    public function index()
    {
        $userModel = new UserModel();

        // جلب المستخدمين مع أسماء أدوارهم
        $users = $userModel->select('users.*, roles.role_name')
                           ->join('roles', 'roles.id = users.role_id')
                           ->where('users.deleted_at', null)
                           ->findAll();
        
        $data = [
            'title' => 'إدارة المستخدمين',
            'users' => $users,
        ];

        return view('users/index', $data);
    }

    /**
     * يعرض نموذج إضافة مستخدم جديد.
     */
    public function new()
    {
        $roleModel = new RoleModel();
        $data = [
            'title' => 'إضافة مستخدم جديد',
            'roles' => $roleModel->findAll(),
        ];
        return view('users/new_user_form', $data);
    }

    /**
     * يحفظ المستخدم الجديد في قاعدة البيانات.
     */
    public function create()
    {
        $model = new UserModel();
        if ($model->insert($this->request->getPost())) {
            return redirect()->to('users')->with('success', 'تم إضافة المستخدم بنجاح.');
        }
        return redirect()->back()->withInput()->with('error', 'فشل إضافة المستخدم.');
    }

    /**
     * يعرض نموذج تعديل بيانات المستخدم.
     */
    public function edit($id)
    {
        $userModel = new UserModel();
        $roleModel = new RoleModel();
        $data = [
            'title' => 'تعديل المستخدم',
            'user'  => $userModel->find($id),
            'roles' => $roleModel->findAll(),
        ];
        return view('users/edit_user_form', $data);
    }

    /**
     * يحدث بيانات المستخدم في قاعدة البيانات.
     */
    public function update()
    {
        $model = new UserModel();
        $id = $this->request->getPost('id');
        $data = $this->request->getPost();

        // إذا كان حقل كلمة المرور فارغًا، قم بإزالته من البيانات
        // حتى لا يتم تحديث كلمة المرور بقيمة فارغة
        if (empty($data['password'])) {
            unset($data['password']);
        }
        
        // لا نسمح بتعطيل حساب المدير الخارق
        if($id == 1){
            unset($data['is_active']);
        }

        if ($model->update($id, $data)) {
            return redirect()->to('users')->with('success', 'تم تحديث المستخدم بنجاح.');
        }
        return redirect()->back()->withInput()->with('error', 'فشل تحديث المستخدم.');
    }

    /**
     * يحذف مستخدمًا (حذف ناعم).
     */
    public function delete($id)
    {
        // لا نسمح بحذف المدير الخارق
        if ($id == 1) {
            return redirect()->to('users')->with('error', 'لا يمكن حذف المدير الخارق.');
        }

        $model = new UserModel();
        if ($model->delete($id)) {
            return redirect()->to('users')->with('success', 'تم حذف المستخدم بنجاح.');
        }
        return redirect()->to('users')->with('error', 'فشل حذف المستخدم.');
    }
}